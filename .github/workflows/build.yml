name: Build Binaries
on: [push, pull_request]

jobs:
  build-win-x86_64:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: make git mingw-w64-x86_64-toolchain mingw-w64-x86_64-libelf mingw-w64-x86_64-SDL2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Build cc65
        run: |
          git clone https://github.com/cc65/cc65.git
          cd cc65
          make -j4
          make install
      - name: Build ROM
        if: startsWith(github.ref, 'refs/tags/r') != true
        run: |
          git clone https://github.com/X16Community/x16-rom.git
          cd x16-rom
          CA65_INC=/share/cc65/asminc make
      - name: Build Release ROM
        if: startsWith(github.ref, 'refs/tags/r')
        run: |
          git clone https://github.com/X16Community/x16-rom.git
          cd x16-rom
          git checkout "$GITHUB_REF"
          PRERELEASE_VERSION=$(echo "$GITHUB_REF_NAME" | grep -oP '[0-9]+$') CA65_INC=/share/cc65/asminc make
      - name: Copy ROM symbols
        run: |
          cp x16-rom/build/x16/*.h src/.
      - name: Build Emulator
        run: |
          git reset --hard
          git diff
          TRACE=1 CROSS_COMPILE_WINDOWS=1 SDL2CONFIG=sdl2-config make V=1 -j2
          mkdir emu_binaries
          cp $(which SDL2.dll) emu_binaries/.
          cp $(which zlib1.dll) emu_binaries/.
          cp sdcard.img.zip emu_binaries/.
          cp x16emu.exe emu_binaries/.
          cp makecart.exe emu_binaries/.
          file emu_binaries/*
      - name: Copy ROM
        run: |
          cp x16-rom/build/x16/rom.bin emu_binaries/.
          cp x16-rom/build/x16/*.sym emu_binaries/.
      - uses: actions/upload-artifact@v3
        with:
          name: x16emu_win64
          path: emu_binaries/*
  build-win-i686:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: make git mingw-w64-i686-toolchain mingw-w64-i686-libelf mingw-w64-i686-SDL2
          path-type: inherit
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Add /mingw32/bin to path
        run: echo "/mingw32/bin" >> $GITHUB_PATH
      - name: Build cc65
        run: |
          git clone https://github.com/cc65/cc65.git
          cd cc65
          make -j4
          make install
      - name: Build ROM
        if: startsWith(github.ref, 'refs/tags/r') != true
        run: |
          git clone https://github.com/X16Community/x16-rom.git
          cd x16-rom
          CA65_INC=/share/cc65/asminc make
      - name: Build Release ROM
        if: startsWith(github.ref, 'refs/tags/r')
        run: |
          git clone https://github.com/X16Community/x16-rom.git
          cd x16-rom
          git checkout "$GITHUB_REF"
          PRERELEASE_VERSION=$(echo "$GITHUB_REF_NAME" | grep -oP '[0-9]+$') CA65_INC=/share/cc65/asminc make
      - name: Copy ROM symbols
        run: |
          cp x16-rom/build/x16/*.h src/.
      - name: Build Emulator
        run: |
          git reset --hard
          git diff
          TRACE=1 WIN_SDL2=/mingw32 TARGET_CPU=x86 CROSS_COMPILE_WINDOWS=1 make V=1 -j2
          mkdir emu_binaries
          cp $(which SDL2.dll) emu_binaries/.
          cp $(which zlib1.dll) emu_binaries/.
          cp sdcard.img.zip emu_binaries/.
          cp x16emu.exe emu_binaries/.
          cp makecart.exe emu_binaries/.
          file emu_binaries/*
      - name: Copy ROM
        run: |
          cp x16-rom/build/x16/rom.bin emu_binaries/.
          cp x16-rom/build/x16/*.sym emu_binaries/.
      - uses: actions/upload-artifact@v3
        with:
          name: x16emu_win32
          path: emu_binaries/*
  build-linux-x86_64:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential make libsdl2-dev
      - name: Build cc65
        run: |
          git clone https://github.com/cc65/cc65.git
          cd cc65
          make -j4
          sudo make install
      - name: Build ROM
        if: startsWith(github.ref, 'refs/tags/r') != true
        run: |
          git clone https://github.com/X16Community/x16-rom.git
          cd x16-rom
          make
      - name: Build Release ROM
        if: startsWith(github.ref, 'refs/tags/r')
        run: |
          git clone https://github.com/X16Community/x16-rom.git
          cd x16-rom
          git checkout "$GITHUB_REF"
          PRERELEASE_VERSION=$(echo "$GITHUB_REF_NAME" | grep -oP '[0-9]+$') make
      - name: Copy ROM symbols
        run: |
          cp x16-rom/build/x16/*.h src/.
      - name: Build Emulator
        run: |
          TRACE=1 make V=1 -j3
          mkdir emu_binaries
          cp sdcard.img.zip emu_binaries/.
          cp x16emu emu_binaries/.
          cp makecart emu_binaries/.
          file emu_binaries/*
      - name: Copy ROM
        run: |
          cp x16-rom/build/x16/rom.bin emu_binaries/.
          cp x16-rom/build/x16/*.sym emu_binaries/.
      - uses: actions/upload-artifact@v3
        with:
          name: x16emu_linux-x86_64
          path: emu_binaries/*
  build-linux-aarch64:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Dependencies
        run: |
          sudo apt-get update 
          sudo apt-get install -y build-essential make qemu-user-static
      - name: Build cc65
        run: |
          git clone https://github.com/cc65/cc65.git
          cd cc65
          make -j4
          sudo make install
      - name: Build ROM
        if: startsWith(github.ref, 'refs/tags/r') != true
        run: |
          git clone https://github.com/X16Community/x16-rom.git
          cd x16-rom
          make
      - name: Build Release ROM
        if: startsWith(github.ref, 'refs/tags/r')
        run: |
          git clone https://github.com/X16Community/x16-rom.git
          cd x16-rom
          git checkout "$GITHUB_REF"
          PRERELEASE_VERSION=$(echo "$GITHUB_REF_NAME" | grep -oP '[0-9]+$') make
      - name: Copy ROM symbols
        run: |
          cp x16-rom/build/x16/*.h src/.
      - name: Build Emulator
        uses: pguyot/arm-runner-action@v2
        with:
          base_image: raspios_lite_arm64:2022-04-04
          image_additional_mb: 8192
          cpu: cortex-a53
          copy_artifact_path: emu_binaries
          commands: |
            apt-get update
            apt-get install -y build-essential make libsdl2-dev file git
            TRACE=1 make V=1 -j3
            mkdir emu_binaries
            cp sdcard.img.zip emu_binaries/.
            cp x16emu emu_binaries/.
            cp makecart emu_binaries/.
            file emu_binaries/*
      - name: Copy ROM
        run: |
          sudo cp x16-rom/build/x16/rom.bin emu_binaries/.
          sudo cp x16-rom/build/x16/*.sym emu_binaries/.
      - uses: actions/upload-artifact@v3
        with:
          name: x16emu_linux-aarch64
          path: emu_binaries/*
  build-linux-armhf:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Dependencies
        run: |
          sudo apt-get update 
          sudo apt-get install -y build-essential make qemu-user-static
      - name: Build cc65
        run: |
          git clone https://github.com/cc65/cc65.git
          cd cc65
          make -j4
          sudo make install
      - name: Build ROM
        if: startsWith(github.ref, 'refs/tags/r') != true
        run: |
          git clone https://github.com/X16Community/x16-rom.git
          cd x16-rom
          make
      - name: Build Release ROM
        if: startsWith(github.ref, 'refs/tags/r')
        run: |
          git clone https://github.com/X16Community/x16-rom.git
          cd x16-rom
          git checkout "$GITHUB_REF"
          PRERELEASE_VERSION=$(echo "$GITHUB_REF_NAME" | grep -oP '[0-9]+$') make
      - name: Copy ROM symbols
        run: |
          cp x16-rom/build/x16/*.h src/.
      - name: Build Emulator
        uses: pguyot/arm-runner-action@v2
        with:
          base_image: raspios_lite:2022-04-04
          image_additional_mb: 8192
          cpu: cortex-a7
          copy_artifact_path: emu_binaries
          commands: |
            apt-get update
            apt-get install -y build-essential make libsdl2-dev file git
            TRACE=1 make V=1 -j3
            mkdir emu_binaries
            cp sdcard.img.zip emu_binaries/.
            cp x16emu emu_binaries/.
            cp makecart emu_binaries/.
            file emu_binaries/*
      - name: Copy ROM
        run: |
          sudo cp x16-rom/build/x16/rom.bin emu_binaries/.
          sudo cp x16-rom/build/x16/*.sym emu_binaries/.
      - uses: actions/upload-artifact@v3
        with:
          name: x16emu_linux-armhf
          path: emu_binaries/*
  build-macos-x86_64:
    # this is currently macos-11, Big Sur
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: | 
          brew install make git sdl2 
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Build cc65
        run: |
          git clone https://github.com/cc65/cc65.git
          cd cc65
          PREFIX=/usr/local make -j4
          sudo PREFIX=/usr/local make install
      - name: Build ROM
        if: startsWith(github.ref, 'refs/tags/r') != true
        run: |
          git clone https://github.com/X16Community/x16-rom.git
          cd x16-rom
          make
      - name: Build Release ROM
        if: startsWith(github.ref, 'refs/tags/r')
        run: |
          git clone https://github.com/X16Community/x16-rom.git
          cd x16-rom
          git checkout "$GITHUB_REF"
          PRERELEASE_VERSION=$(echo "$GITHUB_REF_NAME" | grep -oP '[0-9]+$') make
      - name: Copy ROM symbols
        run: |
          cp x16-rom/build/x16/*.h src/.
      - name: Build Emulator
        run: |
          TRACE=1 MAC_STATIC=1 LIBSDL_FILE=/usr/local/Cellar/sdl2/*/lib/libSDL2.a make V=1 -j3
          mkdir emu_binaries
          cp sdcard.img.zip emu_binaries/.
          cp x16emu emu_binaries/.
          cp makecart emu_binaries/.
          file emu_binaries/*
      - name: Copy ROM
        run: |
          cp x16-rom/build/x16/rom.bin emu_binaries/.
          cp x16-rom/build/x16/*.sym emu_binaries/.
      - uses: actions/upload-artifact@v3
        with:
          name: x16emu_macos
          path: emu_binaries/*
  build-wasm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential make libsdl2-dev
      - uses: mymindstorm/setup-emsdk@v12
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Build cc65
        run: |
          git clone https://github.com/cc65/cc65.git
          cd cc65
          make -j4
          sudo make install
      - name: Build ROM
        if: startsWith(github.ref, 'refs/tags/r') != true
        run: |
          git clone https://github.com/X16Community/x16-rom.git
          cd x16-rom
          make
      - name: Build Release ROM
        if: startsWith(github.ref, 'refs/tags/r')
        run: |
          git clone https://github.com/X16Community/x16-rom.git
          cd x16-rom
          git checkout "$GITHUB_REF"
          PRERELEASE_VERSION=$(echo "$GITHUB_REF_NAME" | grep -oP '[0-9]+$') make
      - name: Copy ROM symbols
        run: |
          cp x16-rom/build/x16/*.h src/.
      - name: Copy ROM
        run: |
          cp x16-rom/build/x16/rom.bin .
      - name: Build Emulator
        run: |
          make V=1 -j3 wasm
          mkdir emu_binaries
          cp x16emu.data x16emu.html x16emu.js x16emu.wasm emu_binaries/
          mkdir emu_binaries/webassembly
          cp webassembly/styles.css webassembly/main.js emu_binaries/webassembly/
          file emu_binaries/*
      - uses: actions/upload-artifact@v3
        with:
          name: x16emu_wasm
          path: emu_binaries/*

